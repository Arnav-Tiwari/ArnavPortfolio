[{"D:\\React Project\\ArnavPortfolio-main\\src\\index.js":"1","D:\\React Project\\ArnavPortfolio-main\\src\\App.js":"2","D:\\React Project\\ArnavPortfolio-main\\src\\reportWebVitals.js":"3","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Context\\WorkContext.js":"4","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Work\\Work.js":"5","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Home\\Home.js":"6","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Contact\\Contact.js":"7","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\About\\About.js":"8","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Work\\WorkDisplay.js":"9","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Work\\workdata.js":"10","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Nav\\Pagenav.js":"11","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Nav\\Homenav.js":"12","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\OverlayEffect\\Overlay.js":"13"},{"size":709,"mtime":1687610456000,"results":"14","hashOfConfig":"15"},{"size":836,"mtime":1687610456000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1687610456000,"results":"17","hashOfConfig":"15"},{"size":757,"mtime":1687610456000,"results":"18","hashOfConfig":"15"},{"size":3119,"mtime":1721719279789,"results":"19","hashOfConfig":"15"},{"size":2692,"mtime":1721719142538,"results":"20","hashOfConfig":"15"},{"size":2507,"mtime":1687610456000,"results":"21","hashOfConfig":"15"},{"size":8284,"mtime":1721736098858,"results":"22","hashOfConfig":"15"},{"size":3243,"mtime":1721734512302,"results":"23","hashOfConfig":"15"},{"size":4060,"mtime":1687610456000,"results":"24","hashOfConfig":"15"},{"size":1081,"mtime":1687610456000,"results":"25","hashOfConfig":"15"},{"size":1102,"mtime":1687610456000,"results":"26","hashOfConfig":"15"},{"size":436,"mtime":1687610456000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hobtpc",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"D:\\React Project\\ArnavPortfolio-main\\src\\index.js",[],[],"D:\\React Project\\ArnavPortfolio-main\\src\\App.js",["75","76","77"],[],"import logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home/Home\";\nimport About from \"./Components/About/About\";\nimport Work from \"./Components/Work/Work\";\nimport Contact from \"./Components/Contact/Contact\";\nimport WorkDisplay from \"./Components/Work/WorkDisplay\";\nimport { useContext, useEffect } from \"react\";\nimport WorkContext from \"./Components/Context/WorkContext\";\nfunction App() {\n  const {getData} = useContext(WorkContext);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/work\" element={<Work />} />\n      <Route path=\"/about\" element={<About />} />\n      <Route path=\"/contact\" element={<Contact />} />\n      <Route path=\"/workDisplay\" element={<WorkDisplay/>} />\n    </Routes>\n  );\n}\n\nexport default App;\n","D:\\React Project\\ArnavPortfolio-main\\src\\reportWebVitals.js",[],[],"D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Context\\WorkContext.js",["78","79"],[],"import React, { createContext, useContext, useState } from \"react\";\nimport work_data from \"../Work/workdata\";\n\nconst WorkContext = createContext();\n\nconst Provider = ({children}) => {\n  const [workData, setWorkData] = useState();\n  const [id, setId] = useState(work_data[0].name);\n  const getData = () => {\n    setWorkData(work_data);\n  };\n  const findDataById = (name) => {\n    Object.entries(workData).map((itm) => {\n      if (itm.name === name) return itm;\n    });\n  };\n  const setWorkId = (id) => {\n    setId(id);\n  };\n  const valueToShare = {\n    workData,\n    id,\n    getData,\n    findDataById,\n    setWorkId,\n  };\n  return <WorkContext.Provider value={valueToShare}>{children}</WorkContext.Provider>\n};\nexport {Provider};\nexport default WorkContext;\n","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Work\\Work.js",["80"],[],"import React, { useContext, useEffect } from \"react\";\nimport work_data from \"./workdata.js\";\nimport \"./Work.scss\";\nimport Pagenav from \"../Nav/Pagenav.js\";\nimport gsap from \"gsap\";\nimport { Link } from \"react-router-dom\";\nimport WorkContext from \"../Context/WorkContext.js\";\nconst navData = [{ work: \"Home\" }];\nconst Work = () => {\n  const doAnimate = () => {\n    const tl = gsap.timeline();\n    tl.to(\".work-overlay\", {\n      bottom: \"100%\",\n      duration: 1.2,\n      ease: \"expo.inOut\",\n    })\n      .to(\".header-mask-para\", { y: 0, duration: 0.1, ease: \"power2.out\" }, 0.9)\n      .to(\n        \".description-mask-para\",\n        {\n          y: 0,\n          duration: 0.4,\n          ease: \"power2.out\",\n        },\n        0.9\n      )\n      .to(\n        \".work-list-item\",\n        {\n          filter: \"blur(0px)\",\n          opacity: 1,\n          duration: 0.7,\n        },\n        0.8\n      );\n  };\n  const { setWorkId } = useContext(WorkContext);\n  const { getData } = useContext(WorkContext);\n  useEffect(() => {\n    doAnimate();\n    getData();\n  }, []);\n  return (\n    <div className=\"work\">\n      <Pagenav navData={navData} color=\"rgb(236,231,225)\" />\n      <div className=\"work-overlay\"></div>\n      <div className=\"work-wrapper\">\n        <div className=\"section-left\">\n          <div className=\"header-mask\">\n            <p className=\"header-mask-para\"> work </p>\n            {/* work */}\n          </div>\n          <div className=\"description-mask\">\n            <p className=\"description-mask-para\">\n              {/* This showcases the variety of projects related to frontend and\n              backend development that I have worked on in recent years. */}\n              This showcases the breadth of frontend and backend projects I have completed, demonstrating my expertise in application development.\n            </p>\n          </div>\n          <div className=\"description-mask\">\n            <p className=\"description-mask-para\">\n            I have also honed my problem-solving abilities on platforms like LeetCode and HackerRank, enhancing my proficiency in data structures and algorithms.\n            </p>\n          </div>\n        </div>\n        <div className=\"section-right\">\n          {/* {JSON.stringify(work_data)} */}\n          {Object.entries(work_data).map(([key, desp]) => {\n            console.log(desp);\n            const { name, shortDescription, description } = desp;\n            console.log(\"NAME\", name);\n            console.log(\"DESCRIPTION\", description);\n            return (\n              <>\n                <div key={key} className=\"work-list-item\">\n                  <Link\n                    to=\"/workDisplay\"\n                    onClick={() => {\n                      setWorkId(name);\n                    }}\n                  >\n                    <h1 className=\"work-list-header\">{name}</h1>\n                  </Link>\n                  <p className=\"work-list-para\">{shortDescription}</p>\n                </div>\n                {/* <p>{JSON.stringify(desp)}</p> */}\n              </>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Work;\n","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Home\\Home.js",["81","82"],[],"import React, { useEffect, useState } from \"react\";\nimport Leftnav from \"../Nav/Homenav.js\";\nimport Overlay from \"../OverlayEffect/Overlay.js\";\nimport \"./Home.scss\";\nimport gsap from \"gsap\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const [animate, setAnimate] = useState(false);\n  const complete = () => {\n    setAnimate(true);\n  };\n  const AnimateBlur = () => {\n    console.log(\"Animate blur is called\");\n    const tl = gsap.timeline();\n    tl.to(\n      \".nav-link\",\n      {\n        filter: \"blur(0px)\",\n        duration: 1,\n      },\n      0.7\n    )\n      .to(\n        \".header\",\n        {\n          y: 0,\n          duration: 0.4,\n        },\n        0.7\n      )\n      .to(\n        \".d-mask\",\n        {\n          y: 0,\n          duration: 0.4,\n          // delay: 0.2,\n          ease: \"power2.out\",\n        },\n        0.7\n      );\n  };\n  const doAnimation = () => {\n    // const tl = gsap.timeline();\n    gsap.to(\".overlay\", {\n      // height: 0,\n      top: \"100%\",\n      duration: 1,\n      ease: \"expo.inOut\",\n      onComplete: complete,\n    });\n  };\n  useEffect(() => {\n    console.log(\"use Effect ran\");\n    doAnimation();\n    // debugger\n    AnimateBlur();\n  }, [animate]);\n  return (\n    <div className=\"home\">\n      <div className=\"overlay\"></div>\n      <Leftnav />\n      <div className=\"home-wrapper\">\n        <div className=\"section-left\">\n          <div className=\"content\">\n            <div className=\"header-mask\">\n              <h1 className=\"header\">Arnav Tiwari</h1>\n            </div>\n            <div className=\"description-mask\">\n              <p className=\"d-mask\"> I am a Java backend developer with experience in designing and building scalable server-side applications using Core Java and Spring Boot.</p>\n            </div>\n            <div className=\"description-mask\">\n              <p className=\"d-mask\">\n              Currently working as Software Design Engineer @Newgen Software \n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"section-right\">\n          <div className=\"home-nav\">\n            <div className=\"home-nav-item\">\n              <Link to=\"/work\" className=\"nav-link\">\n                WORK\n              </Link>\n            </div>\n            <div className=\"home-nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                ABOUT\n              </Link>\n            </div>\n            <div className=\"home-nav-item\">\n              <Link to=\"/contact\" className=\"nav-link\">\n                CONTACT\n              </Link>\n            </div>\n          </div>\n        </div>\n        {/* <div><h1>HELLO</h1></div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Contact\\Contact.js",["83","84","85"],[],"import gsap from \"gsap\";\nimport React, { useEffect } from \"react\";\nimport Pagenav from \"../Nav/Pagenav\";\nimport \"./Contact.scss\";\nconst navData = [{ work: \"Home\" }];\nconst Contact = () => {\n  const animate = { bottom: \"100%\", duration: 0.8, ease: \"expo.in\" };\n  const doAnimate = () => {\n    console.log(\"RUNNING\");\n    const tl = gsap.timeline();\n\n    tl.to(\".contact-overlay\", animate)\n\n      .to(\n        \".contact-link\",\n        {\n          y: 0,\n          duration: 1,\n          ease: \"expo.inOut\",\n        },\n        1\n      )\n      .to(\n        \".description\",\n        {\n          y: 0,\n          duration: 1,\n          ease: \"expo.inOut\",\n        },\n        1\n      )\n      .to(\n        \".header\",\n        {\n          y: 0,\n          duration: 1,\n          ease: \"expo.inOut\",\n        },\n        1.5\n      );\n  };\n\n  const doAnimateMailOverlay = () => {\n    console.log(\"Something is DONE\");\n    const tl = gsap.timeline();\n    tl.to(\".mail-overlay\", animate);\n  };\n\n  useEffect(() => {\n    doAnimate();\n  }, []);\n  return (\n    <div className=\"contact\">\n      <Pagenav navData={navData} color={\"white\"} />\n      <div className=\"contact-overlay\"></div>\n      <div className=\"contact-wrapper\">\n        <div className=\"section-left\">\n          <div className=\"header-mask\">\n            <h1 className=\"header\">HELLO.</h1>\n          </div>\n          <div className=\"description-mask\">\n            <p className=\"description\">\n              I am open to exploring new opportunities and working with\n              companies.Feel free to contact me.\n            </p>\n          </div>\n          <div className=\"description-mask\">\n            <p className=\"contact-link\">\n              Email: <a href=\"\">arnavtiwari100@gmail.com</a>\n            </p>\n          </div>\n          <div className=\"description-mask\">\n            <p className=\"contact-link\">\n              On the Internet:{\" \"}\n              <a href=\"https://www.linkedin.com/in/arnav-tiwari-0b73a41a5/\">\n                LinkedIn\n              </a>\n              / <a href=\"https://leetcode.com/Arnav_Tiwari/\">LeetCode</a>/{\" \"}\n              <a href=\"https://github.com/Arnav-Tiwari\">GitHub</a>\n            </p>\n          </div>\n        </div>\n        {/* <div className=\"section-right\">\n          <div className=\"contact-form\" onClick={doAnimateMailOverlay}>\n            <div className=\"mail-overlay\"></div>\n            Something\n          </div>\n        </div> */}\n        {/* </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\About\\About.js",[],[],"D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Work\\WorkDisplay.js",["86","87","88"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport WorkContext from \"../Context/WorkContext\";\nimport work_data from \"./workdata\";\nimport Pagenav from \"../Nav/Pagenav\";\nimport \"./workDisplay.scss\";\nimport { gsap } from \"gsap\";\nconst navData = [{ work: \"Work\" }];\nconst WorkDisplay = () => {\n  const { id } = useContext(WorkContext);\n  console.log(\"ID IS \", id);\n  console.log(\"WORKING DATA IS \", work_data);\n  const desc = Object.entries(work_data).filter((itm) => {\n    console.log(itm);\n    console.log(\"ITMS IS \",itm[1].name, \"   \", id);\n    if (itm[1].name === id) {\n      return itm[1];\n    }\n  })[0][1];\n\n\n  console.log(\"DESC \", desc);\n  const width=window.innerWidth;\n  console.log(\"width \",width);\n  const height=width<=760?\"80%\":\"90%\";\n  console.log(\"HEIGHT ANIM \",height);\n  const animateOverlay = () => {\n    console.log(\"INSIDE Animate Overlay\");\n    const tl = gsap.timeline();\n    tl.to(\".overlay\", {\n      height: \"90%\",\n      duration: 1,\n      ease: \"expo.inOut\",\n      // onComplete: complete,\n    }).to(\n      \".overlay-title-heading\",\n      {\n        y: 0,\n        duration: 1.5,\n        ease: \"expo.inOut\",\n      },\n      0.3\n    );\n  };\n  useEffect(() => {\n    animateOverlay();\n  }, []);\n\n  return (\n    <>\n      {console.log(\"WIDTH \",window.innerWidth)}\n      <div className=\"workDisplay-container\">\n        <Pagenav navData={navData} color={\"#1a1919\"} />\n        <div className=\"workDisplay-overlay-container\">\n          <div className=\"overlay\">\n            <div className=\"overlay-title\">\n              <div className=\"overlay-title-wraper\">\n                <h1 className=\"overlay-title-heading\">{desc.name}</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"work-description\">\n          <div className=\"description\">{desc.description}</div>\n          <div className=\"description\">-{desc.techStack}</div>\n          <br />\n          <br />\n          <br />\n          {/* <table className=\"task-wrapper\">\n            <thead>\n              <tr>\n                <th className=\"task-header\">Role</th>\n                <th className=\"task-header\">Responsibility</th>\n                <th className=\"task-header\">URL</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td className=\"task\">{desc.role}</td>\n                <td className=\"task\">{desc.responsiblity}</td>\n                <td className=\"task\">{desc.url}</td>\n              </tr>\n            </tbody>\n          </table> */}\n          <div className=\"task-wrapper\">\n            <div className=\"task-content-wrapper\">\n              <div className=\"task-header\">ROLE</div>\n              <div className=\"task\">{desc.role}</div>\n            </div>\n            <div className=\"task-content-wrapper\">\n              <div className=\"task-header\">Reponsibility</div>\n              <div className=\"task\">{desc.responsiblity}</div>\n            </div>\n            <div className=\"task-content-wrapper\">\n              <div className=\"task-header\">URL</div>\n              <div className=\"task\"><a href={desc.url} target=\"_blank\">{desc.url}</a></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default WorkDisplay;\n","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Work\\workdata.js",[],[],"D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Nav\\Pagenav.js",[],[],"D:\\React Project\\ArnavPortfolio-main\\src\\Components\\Nav\\Homenav.js",["89","90","91"],[],"import React from \"react\";\nimport \"./Homenav.scss\";\nconst Leftnav = () => {\n  const f = () => {\n    console.log(\"CLICKED\");\n  };\n  return (\n    <div className=\"left-nav\">\n      <div className=\"left-nav-item\">\n        <a href=\"https://leetcode.com/Arnav_Tiwari/\" target=\"_blank\" className=\"left-nav-link\">\n          LC\n        </a>\n      </div>\n      <div className=\"left-nav-item\">\n        <a\n          href=\"https://github.com/Arnav-Tiwari\"\n          target=\"_blank\"\n          className=\"left-nav-link\"\n          onClick={() => f()}\n        >\n          GH\n        </a>\n      </div>\n      <div className=\"left-nav-item\">\n        <a href=\"https://www.hackerrank.com/arnavtiwari100?hr_r=1\" target=\"_blank\" className=\"left-nav-link\">\n          HR\n        </a>\n      </div>\n      {/* <div className=\"left-nav-item\">\n        <a href=\"\" className=\"left-nav-link\">\n          CF\n        </a>\n      </div> */}\n      <div className=\"left-nav-line\"></div>\n      <div className=\"left-nav-item nav-copyright\">\n        <div className=\"copyright\">@/2023</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Leftnav;\n","D:\\React Project\\ArnavPortfolio-main\\src\\Components\\OverlayEffect\\Overlay.js",["92","93"],[],"import gsap from \"gsap\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Overlay.scss\";\n\n\nconst Overlay = ({ animate, setAnimate ,doAnimation}) => {\n  useEffect(() => {\n    doAnimation();\n  });\n  return (\n    <div className=\"overlay-wrapper\">\n      {!animate ? <div className=\"overlay\"></div> : <></>}\n      {/* <div className=\"content\">This content is the Hidden one</div> */}\n    </div>\n  );\n};\n\nexport default Overlay;\n",{"ruleId":"94","severity":1,"message":"95","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":9,"column":22,"nodeType":"96","messageId":"97","endLine":9,"endColumn":31},{"ruleId":"94","severity":1,"message":"99","line":12,"column":10,"nodeType":"96","messageId":"97","endLine":12,"endColumn":17},{"ruleId":"94","severity":1,"message":"100","line":1,"column":32,"nodeType":"96","messageId":"97","endLine":1,"endColumn":42},{"ruleId":"101","severity":1,"message":"102","line":13,"column":40,"nodeType":"103","messageId":"104","endLine":13,"endColumn":42},{"ruleId":"105","severity":1,"message":"106","line":42,"column":6,"nodeType":"107","endLine":42,"endColumn":8,"suggestions":"108"},{"ruleId":"94","severity":1,"message":"109","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":15},{"ruleId":"105","severity":1,"message":"110","line":58,"column":6,"nodeType":"107","endLine":58,"endColumn":15,"suggestions":"111"},{"ruleId":"94","severity":1,"message":"112","line":43,"column":9,"nodeType":"96","messageId":"97","endLine":43,"endColumn":29},{"ruleId":"105","severity":1,"message":"113","line":51,"column":6,"nodeType":"107","endLine":51,"endColumn":8,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":69,"column":22,"nodeType":"117","endLine":69,"endColumn":33},{"ruleId":"94","severity":1,"message":"118","line":1,"column":40,"nodeType":"96","messageId":"97","endLine":1,"endColumn":48},{"ruleId":"101","severity":1,"message":"119","line":12,"column":55,"nodeType":"103","messageId":"104","endLine":12,"endColumn":57},{"ruleId":"120","severity":1,"message":"121","line":95,"column":37,"nodeType":"117","messageId":"122","endLine":95,"endColumn":72,"fix":"123"},{"ruleId":"120","severity":1,"message":"121","line":10,"column":9,"nodeType":"117","messageId":"122","endLine":10,"endColumn":96,"fix":"124"},{"ruleId":"120","severity":1,"message":"121","line":15,"column":9,"nodeType":"117","messageId":"122","endLine":20,"endColumn":10,"fix":"125"},{"ruleId":"120","severity":1,"message":"121","line":25,"column":9,"nodeType":"117","messageId":"122","endLine":25,"endColumn":110,"fix":"126"},{"ruleId":"94","severity":1,"message":"127","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":12},{"ruleId":"94","severity":1,"message":"118","line":2,"column":28,"nodeType":"96","messageId":"97","endLine":2,"endColumn":36},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'getData' is assigned a value but never used.","'useContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'Overlay' is defined but never used.","React Hook useEffect has a missing dependency: 'doAnimation'. Either include it or remove the dependency array.",["129"],"'doAnimateMailOverlay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'doAnimate'. Either include it or remove the dependency array.",["130"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"131","text":"132"},{"range":"133","text":"132"},{"range":"134","text":"132"},{"range":"135","text":"132"},"'gsap' is defined but never used.",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},[3112,3112]," rel=\"noreferrer\"",[303,303],[533,533],[729,729],"Update the dependencies array to be: [getData]",{"range":"142","text":"143"},"Update the dependencies array to be: [animate, doAnimation]",{"range":"144","text":"145"},"Update the dependencies array to be: [doAnimate]",{"range":"146","text":"147"},[1051,1053],"[getData]",[1190,1199],"[animate, doAnimation]",[1017,1019],"[doAnimate]"]